#!/usr/bin/ruby
#coding:utf-8

number_speeds = int(input())
lower_limiter = 10**9 + 1
k = j = c = 0;
for i in range(1, number_speeds + 1):
  speed = int(input())
  if speed % 2 != 0:
    c += 1
    if speed < lower_limiter:
      lower_limiter = speed
      k = i
  elif speed == 0: j = i
for i in range(1, number_speeds + 1):
  if (i != j) and ((c % 2 == 0) or (i != k)): print(i, end = ' ')

# На ускорителе для большого числа частиц производятся замеры скорости каждой
# из них.
# Скорость частицы - это целое неотрицательное число. Частиц, скорость которых
# измерена, может быть очень много, но не может быть меньше трех. Скорости всех
# частиц различны.
# При обработке результата в каждой серии эксперимента отбирается основное
# множество скоростей. Это непустое подмножество скоростей частиц (в него могут
# войти как скорость одной частицы, так и скорость всех частиц серии),
# такое, что сумма значений скоростей у него четна и максимальная среди всех
# возможных непустых подмножеств с четной суммой. Если таких подмножеств
# несколько, то из них выбирается то подмножество, которое содержит наименьшее
# количество элементов.
# Достаточно написать эффективную, в том числе по используемой памяти, программу
# которая будет обрабатывать результаты эксперимента, находя основное множество.
# На вход программе в первой строке подается количество частиц N. В каждой из
# последующих N строк одно целое неотрицательное число, не превышающее
# десять в девятой степени. Все N чисел различны.
#
# Пример входных данных:
# 5
# 123
# 2
# 1000
# 0
# 10
# Программа должна выводить в порядке возрастания номера частиц, скорости
# принадлежат основному множеству данной серии. Нумерация частиц ведется с
# единицы.
#
# Пример выходных данных для приведенного выше примера входных данных:
# 2 3 5
